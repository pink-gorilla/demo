{:paths ["src"
         "resources" ; json resources
         "target/webly" ; in case we build ourselves.
         ]
 :deps {org.clojure/clojure    {:mvn/version "1.11.1"}
        org.pinkgorilla/timbre {:mvn/version "0.0.6"}
        org.pinkgorilla/goldly-docs {:mvn/version "0.7.19"}}

 :aliases
 {:webly {:extra-deps {org.pinkgorilla/ui-repl {:mvn/version "0.1.104"}}
          :extra-paths ["src" "resources" 
                        "target/webly" ; to include the sci-bindings info
                        "node_modules"]
          :exec-fn webly.app.app/webly-build
          :exec-args {:config ["docs/docs-config.edn"
                               "demo-config.edn"]
                      :profile "npm-install"}}

  :npm-install {:exec-args {:profile "npm-install"}}
  :compile {:exec-args {:profile "compile2"}}
  :release {:exec-args {:profile "release"}}
  :release-adv {:exec-args {:profile "release-adv"}}
  :static {:exec-args {:profile "static"}}
  :ci {:exec-args {:profile "ci"}}
  :run {:exec-fn modular.system/start!
        :exec-args {:profile "jetty"
                    :services "demo-services.edn"}}


   :nbeval {:exec-fn modular.system/start!
           :exec-args {:run reval.task/eval-all-collections
                       :config  ["demo-config.edn"]
                       :services "task-services.edn"}}
;           
  }}
